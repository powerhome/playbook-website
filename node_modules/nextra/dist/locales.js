"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/locales.ts
var locales_exports = {};
__export(locales_exports, {
  locales: () => locales,
  withLocales: () => withLocales
});
module.exports = __toCommonJS(locales_exports);
var import_server = require("next/server");
function getCookie(cookies, key) {
  if (typeof cookies.get === "function") {
    return cookies.get(key);
  }
  return cookies[key];
}
function locales(request) {
  const { nextUrl } = request;
  const shouldHandleLocale = !/^\/(api|_next)\//.test(nextUrl.pathname) && !/\.(jpe?g|svg|png|webmanifest)$/.test(nextUrl.pathname) && nextUrl.locale !== "";
  if (!shouldHandleLocale)
    return;
  const fullUrl = nextUrl.toString();
  let localeInPath = fullUrl.slice(fullUrl.indexOf("//" + nextUrl.host) + nextUrl.host.length + 2);
  localeInPath = localeInPath.replace(nextUrl.pathname + nextUrl.search, "").replace("/", "");
  let finalLocale;
  if (localeInPath) {
    finalLocale = localeInPath;
  } else {
    const clientLocale = getCookie(request.cookies, "NEXT_LOCALE");
    if (clientLocale) {
      try {
        nextUrl.locale = clientLocale;
      } catch (err) {
      }
    }
    finalLocale = nextUrl.locale;
    if (finalLocale !== nextUrl.defaultLocale) {
      return import_server.NextResponse.redirect(new URL("/" + finalLocale + nextUrl.pathname + nextUrl.search, request.url));
    }
  }
  let pathname = nextUrl.pathname || "/";
  if (pathname === "/")
    pathname += "index";
  else if (pathname.endsWith("/"))
    pathname = pathname.slice(0, -1);
  if (!pathname.endsWith("." + finalLocale)) {
    return import_server.NextResponse.rewrite(new URL("/" + finalLocale + pathname + "." + finalLocale + nextUrl.search, request.url));
  }
}
function withLocales(middleware) {
  return (...args) => {
    return locales(args[0]) || middleware(...args);
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  locales,
  withLocales
});
